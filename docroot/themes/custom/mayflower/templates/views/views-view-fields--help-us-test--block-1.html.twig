{#
/**
 * @file
 * Theme override to display all the fields in a row.
 *
 * Available variables:
 * - view: The view in use.
 * - fields: A list of fields, each one contains:
 *   - content: The output of the field.
 *   - raw: The raw data for the field, if it exists. This is NOT output safe.
 *   - class: The safe class ID to use.
 *   - handler: The Views field handler controlling this field.
 *   - inline: Whether or not the field should be inline.
 *   - wrapper_element: An HTML element for a wrapper.
 *   - wrapper_attributes: List of attributes for wrapper element.
 *   - separator: An optional separator that may appear before a field.
 *   - label: The field's label text.
 *   - label_element: An HTML element for a label wrapper.
 *   - label_attributes: List of attributes for label wrapper.
 *   - label_suffix: Colon after the label.
 *   - element_type: An HTML element for the field content.
 *   - element_attributes: List of attributes for HTML element for field content.
 *   - has_label_colon: A boolean indicating whether to display a colon after
 *     the label.
 *   - element_type: An HTML element for the field content.
 *   - element_attributes: List of attributes for HTML element for field content.
 * - row: The raw result from the query, with all data it fetched.
 *
 * @see template_preprocess_views_view_fields()
 */
#}
{# {{ dump(fields) }} #}

{#
  fields: field-icon, title (linked to node)
#}
<div class="ma__test-feed__icon">{{ fields.field_icon.content }}</div>
<div class="ma__test-feed__content">
  <div class="ma__test-feed__link">
    <span class="ma__decorative-link">
        {{ fields.title.content }}&nbsp;<svg focusable="false" role="presentation" class="svg-arrow">
          <use xlink:href="/{{ directory }}/images/svg-sprite.svg#arrow"></use>
        </svg>
    </span>
  </div>
  <div class="ma__test-feed__description">
    {{ fields.body.content }}
  </div>
</div>
